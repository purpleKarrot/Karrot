/*
 * Copyright (C) 2013 Daniel Pfeifer <daniel@pfeifer-mail.de>
 *
 * Distributed under the Boost Software License, Version 1.0.
 * See accompanying file LICENSE_1_0.txt or copy at
 *   http://www.boost.org/LICENSE_1_0.txt
 */

#ifndef KARROT_CMAKE_HPP
#define KARROT_CMAKE_HPP

#include <karrot.hpp>

#include <string>
#include <vector>
#include <fstream>

namespace CMake
{

class Listsfile
  {
  public:
    void add_prefix(const std::string& prefix)
      {
      prefixes.push_back(prefix);
      }
    void add_subdir(const std::string& subdir)
      {
      subdirs.push_back(subdir);
      }
    void write() const
      {
      std::ofstream out("CMakeLists.txt");
      out << "# Generated by Karrot 0.1\n\n";
      out << "cmake_minimum_required(VERSION 2.8 FATAL_ERROR)\n";
      out << "project(Workspace NONE)\n\n";
      if (!prefixes.empty())
        {
        out << "list(APPEND CMAKE_PREFIX_PATH\n";
        for (const std::string& prefix : prefixes)
          {
          out << "  \"${Workspace_SOURCE_DIR}/" << prefix << "\"\n";
          }
        out << "  )\n";
        }
      for (const std::string& subdir : subdirs)
        {
        out << "add_subdirectory(" << subdir << ")\n";
        }
      }
  private:
    std::vector<std::string> prefixes;
    std::vector<std::string> subdirs;
  };

class PrefixInjector: public Karrot::DriverDecorator
  {
  public:
    PrefixInjector(Listsfile& listsfile, std::unique_ptr<Driver>&& component)
        : listsfile(listsfile), Karrot::DriverDecorator(std::move(component))
      {
      }
  private:
    void download(const Karrot::Implementation& impl, bool requested) //override
      {
      DriverDecorator::download(impl, requested);
      listsfile.add_prefix(impl.name);
      }
  private:
    Listsfile& listsfile;
  };

class SubdirInjector: public Karrot::DriverDecorator
  {
  public:
    SubdirInjector(Listsfile& listsfile, std::unique_ptr<Driver>&& component)
        : listsfile(listsfile), Karrot::DriverDecorator(std::move(component))
      {
      }
  private:
    void download(const Karrot::Implementation& impl, bool requested) //override
      {
      DriverDecorator::download(impl, requested);
      listsfile.add_subdir(impl.name);
      }
  private:
    Listsfile& listsfile;
  };

} // namespace CMake

#endif /* KARROT_CMAKE_HPP */
